{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel OpenApi Demo Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "User Login",
                "description": "Login User Here",
                "operationId": "authLogin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Login failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": "400"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Incorrect email or password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/product": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of products",
                "description": "Returns list of products",
                "operationId": "getProductList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Store new product",
                "description": "Returns product data",
                "operationId": "storeProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedException"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/product/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product information",
                "description": "Returns product data",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": "404"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update existing product",
                "description": "Returns updated product data",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": "404"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete existing product",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "product deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedException"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": "404"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ProductCollection": {
                "title": "ProjectCollection",
                "description": "Project Collection",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProjectCollection"
                }
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new product",
                        "type": "string",
                        "example": "Hair curler"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the new product",
                        "type": "string",
                        "example": "This is new product's description"
                    },
                    "stock": {
                        "title": "Stock",
                        "description": "Stock of the product, allowed to be null",
                        "type": "integer",
                        "example": "5"
                    },
                    "purchase_price": {
                        "title": "Purchase Price",
                        "description": "Purchase price of the product",
                        "type": "number",
                        "format": "float",
                        "example": "10"
                    },
                    "selling_price": {
                        "title": "Selling Price",
                        "description": "Selling price of the product",
                        "type": "number",
                        "format": "float",
                        "example": "23.75"
                    },
                    "image_url": {
                        "title": "Image Url",
                        "description": "Image URL of the product",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product"
                }
            },
            "LoginRequest": {
                "title": "Login request",
                "description": "Login request body data",
                "required": [
                    "email",
                    "password",
                    "device_name"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "user@email.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "Password of the user made in sha256 hash",
                        "type": "string"
                    },
                    "device_name": {
                        "title": "device_name",
                        "description": "Name of the device of the user, used for identifation purposes and generating the token",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StoreProductRequest": {
                "title": "Store Recipe request",
                "description": "Store Recipe request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new Recipe",
                        "type": "string",
                        "example": "A nice Recipe"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new Recipe",
                        "type": "string",
                        "example": "This is new Recipe's description"
                    },
                    "stock": {
                        "title": "Stock",
                        "description": "Stock of the product, allowed to be null",
                        "type": "integer",
                        "example": "5"
                    },
                    "purchase_price": {
                        "title": "Purchase Price",
                        "description": "Purchase price of the product",
                        "type": "number",
                        "format": "float",
                        "example": "10"
                    },
                    "selling_price": {
                        "title": "Selling Price",
                        "description": "Selling price of the product",
                        "type": "number",
                        "format": "float",
                        "example": "23.75"
                    },
                    "image_url": {
                        "title": "Image Url",
                        "description": "Image URL of the product",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LoginResource": {
                "title": "LoginResource",
                "description": "Login resource",
                "properties": {
                    "status": {
                        "title": "Status code",
                        "description": "Status code, either 200 or 400",
                        "type": "integer",
                        "example": 200
                    },
                    "message": {
                        "title": "Token",
                        "description": "If login correct, token",
                        "type": "string",
                        "example": "2e2fd7acefedf6f7b20875dcb2f97e221d3057ab8d4da40ea4cd428bcd705354"
                    },
                    "token": {
                        "title": "Token",
                        "description": "If login correct, token",
                        "type": "string",
                        "example": "2e2fd7acefedf6f7b20875dcb2f97e221d3057ab8d4da40ea4cd428bcd705354"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "LoginResource"
                }
            },
            "ProductResource": {
                "title": "ProductResource",
                "description": "product resource",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Product"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "productResource"
                }
            },
            "UnauthorizedException": {
                "title": "Unauthorized Exception",
                "description": "Standard unauthorized exception, given when token invalid or not existing",
                "properties": {
                    "status": {
                        "title": "Status code",
                        "description": "Status code 401",
                        "type": "integer",
                        "example": 401
                    },
                    "message": {
                        "title": "Message",
                        "type": "string",
                        "example": "Unauthorized"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Unauthorized Exception"
                }
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token authentication",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Products",
            "description": "API Endpoints of products"
        }
    ]
}